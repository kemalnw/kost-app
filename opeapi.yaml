swagger: "2.0"
info:
  title: "Kost App"
  description: "API Spec for Kost App"
  version: "1.0.0"
  contact:
    email: "abdulkemalnw@gmail.com"
host: "localhost"
basePath: "/api/v1"
tags:
- name: "auth"
  description: "Everything about authentication"
- name: "account"
  description: "Access to account data"
- name: "room"
  description: "Operation about room"
- name: "owner"
  description: "Access to owner resource"
- name: "booking"
  description: "About availability of room"
schemes:
- "http"
paths:
  /register:
    post:
      tags:
      - "auth"
      summary: "Register as new user"
      operationId: "register"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            role:
              type: integer
              enum: [1,2,3]
      responses:
        "422":
          description: "Invalid Input Data"
          schema:
            $ref: "#/definitions/InputValidationResponse"
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/User"
  /login:
    post:
      tags:
      - "auth"
      summary: "Logged in into app"
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      responses:
        "422":
          description: "Invalid Input Data"
          schema:
            $ref: "#/definitions/InputValidationResponse"
        "200":
          description: "Success"
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
              data:
                type: array
                items:
                  type: object
                  properties:
                    token:
                      type: string
  /account/current-user:
    get:
      tags:
      - "account"
      summary: "Retrieve current logged in user"
      operationId: "current-user"
      produces:
      - "application/json"
      security:
      - Bearer: []
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/User"
  /rooms:
    get:
      tags:
      - "room"
      summary: "Get listing room for the user"
      operationId: "public-room-list"
      produces:
      - "application/json"
      parameters:
      - name: "search"
        in: "query"
        description: "The keyword to search a room"
        type: "string"
      - name: "limit"
        in: "query"
        description: "The amount of data you want to be fetched"
        type: "integer"
      responses:
        "200":
          description: "Success"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Room"
              links:
                type: object
              meta:
                type: object
  /rooms/{roomId}:
    get:
      tags:
      - "room"
      summary: "Get room detail for the user"
      operationId: "public-room-detail"
      produces:
      - "application/json"
      parameters:
      - name: "roomId"
        in: "path"
        description: "ID of room that needs to be fetched"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Room"
  /owner/rooms:
    get:
      tags:
      - "owner"
      summary: "Get listing room for the owner"
      operationId: "owner-room-list"
      produces:
      - "application/json"
      security:
      - Bearer: []
      parameters:
      - name: "search"
        in: "query"
        description: "The keyword to search a room"
        type: "string"
      - name: "limit"
        in: "query"
        description: "The amount of data you want to be fetched"
        type: "integer"
      responses:
        "200":
          description: "Success"
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Room"
              links:
                type: object
              meta:
                type: object
    post:
      tags:
      - "owner"
      summary: "Create a new room"
      operationId: "create-room"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
      - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
            price:
              type: integer
            location:
              type: string
            unit:
              type: integer
      responses:
        "422":
          description: "Invalid Input Data"
          schema:
            $ref: "#/definitions/InputValidationResponse"
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/Room"
  /owner/rooms/{roomId}:
    get:
      tags:
      - "owner"
      summary: "Get room detail for the owner"
      operationId: "owner-room-detail"
      produces:
      - "application/json"
      security:
      - Bearer: []
      parameters:
      - name: "roomId"
        in: "path"
        description: "ID of room that needs to be fetched"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Room"
    put:
      tags:
      - "owner"
      summary: "Update the spesified room detail"
      operationId: "owner-room-update"
      produces:
      - "application/json"
      security:
      - Bearer: []
      parameters:
      - name: "roomId"
        in: "path"
        description: "ID of room that needs to be updated"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
            price:
              type: integer
            location:
              type: string
            unit:
              type: integer
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Room"
    delete:
      tags:
      - "owner"
      summary: "Remove the specified room from storage."
      operationId: "owner-room-delete"
      produces:
      - "application/json"
      security:
      - Bearer: []
      parameters:
      - name: "roomId"
        in: "path"
        description: "ID of room that needs to be deleted"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Success"
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
  /booking:
    post:
      tags:
      - "booking"
      summary: "Asking for room availability"
      operationId: "booking"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      security:
      - Bearer: []
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: object
          properties:
            room_id:
              type: integer
            booking_date:
              type: string
      responses:
        "422":
          description: "Invalid Input Data"
          schema:
            $ref: "#/definitions/InputValidationResponse"
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/Booking"

securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"

definitions:
  InputValidationResponse:
    type: object
    properties:
      message:
        type: string
      errors:
        type: array
        items:
          type: object
  User:
    type: object
    properties:
      type:
        type: string
      id:
        type: integer
      attributes:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          balance:
            type: integer
  Room:
    type: object
    properties:
      type:
        type: string
      id:
        type: integer
      attributes:
        type: object
        properties:
          name:
            type: string
          price:
            type: integer
          location:
            type: string
          unit:
            type: integer
  Booking:
    type: object
    properties:
      type:
        type: string
      id:
        type: integer
      attributes:
        type: object
        properties:
          price:
            type: integer
          total_paid:
            type: integer
          booking_date:
            type: string
